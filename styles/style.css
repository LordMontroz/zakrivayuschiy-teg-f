/* Здесь вы напишете основную часть стилей страницы.

Будьте внимательны! Для корректной работы скриптов на этом сайте нужно, чтобы в HTML некоторые классы были названы особым образом:
✦ theme-dark — класс тёмной темы
✦ theme-light — класс светлой темы
✦ like-icon — для svg-иконки анимированного сердца
✦ card__like-button — для кнопки Like рядом с иконкой
✦ card__icon-button — для кнопки, оборачивающей иконку
✦ card__icon-button — для кнопки, оборачивающей иконку
✦ is-liked — для обозначения состояния лайкнутой иконки в виде сердца
✦ button__text — для обозначения текстового элемента внутри кнопки

Кроме этого, не меняйте HTML переключателя тем. Его разметка также гарантирует работу своего скрипта.

*/

.page {
  min-inline-size: 320px;
  min-block-size: 100dvb;

  /* Основной шрифт можете смело применить к селектору .page, сославшись на переменную. Только не забываем указать альтернативный системный шрифт. */

  font-family: var(--accent-font-family, "PressStart2P-Regular", fantasy);

  /* Основной вес шрифта применяется к селектору .page через font-variation-settings */

  font-variation-settings: "wght" var(--main-font-weight, 400);

  /* Как только вы укажете для селектора .page свойства фона и цвета текста, сославшись на переменные, сможете проверить, что цветовые темы работают */

  color: var(--accent-color, #00cc14);

  /* Шаг 5. Фоны. Значение для свойства background-image лучше хранить в отдельной переменной и менять между темами. Фон фиксирован, скроллится со всей страницей. */

  background-image: repeating-linear-gradient(
      0deg,
      var(--bg-gradient, #000) 0 2px,
      transparent 2px 4px
    ),
    repeating-linear-gradient(
      90deg,
      var(--bg-gradient, #000) 0 2px,
      transparent 2px 4px
    ),
    linear-gradient(
      to top,
      var(--bg-gradient-start, #007f0c) 0%,
      var(--bg-gradient-end, #004306) 0.01%,
      var(--bg-gradient-start, #007f0c) 100%
    );
  background-size: cover;
  background-attachment: fixed;
}

/* Шаг 6. Лейаут */

.header {
  margin: 100px auto;
  width: 100%;
  max-width: 700px;
  background-color: var(--bg-color, #fff);
  border: 2px solid var(--accent-color, #000);
}

/* резиновые элементы — логотип, заголовок, отступы в шапке. Используйте clamp */

.header-wrapper {
  width: 100%;
  padding-top: clamp(120px, 10.4167vw, 136px);
}

.header-title {
  display: block;
  text-align: center;
  font-family: var(--accent-font-family, "PressStart2P-Regular", fantasy);
  font-size: clamp(49px, -0.0783rem + 4.6009vw, 65px);
  font-weight: var(--main-font-weight, 465);
  line-height: normal;
  text-transform: uppercase;
  margin-bottom: 20px;
  text-decoration: none;
}

.header-text {
  display: block;
  text-align: center;
  font-family: var(--accent-font-family, "PressStart2P-Regular", fantasy);
  font-size: clamp(0.875rem, 0.6769rem + 0.8451vw, 1.4375rem);
  font-weight: var(--main-font-weight, 465);
  line-height: normal;
  text-transform: uppercase;
}

.theme-menu {
  display: flex;
  padding-block-start: 25px;
  padding-block-end: 21px;
  justify-content: center;
}

.theme-menu__list {
  display: flex;
  flex-direction: column;
  gap: 8px;
  text-align: left;
  user-select: none;
}

.theme-menu__item {
  display: inline;
}

.button {
  z-index: 1;
  position: relative;
  border: 2px solid var(--accent-color, #00cc14);
  font-family: var(--accent-font-family, "PressStart2P-Regular", fantasy);
  background: var(--bg-color, #000);
  font-weight: var(--main-font-weight, 465);
  text-transform: inherit;
  transition: box-shadow 0.3s ease;
  font-size: 14px;
  cursor: pointer;
  appearance: none;
}

.button:focus {
  outline: none;
}

button:hover {
  cursor: pointer;
}

.button:focus-visible {
  box-shadow: 2px 2px 0px 0px var(--accent-color, #00cc14);
}

.button::before {
  content: "";
  position: absolute;
  inset: 0;
  z-index: -1;
  background: var(--accent-color, #00cc14);
  transition: transform 0.5s ease-in-out;
  transform: scaleX(0);
  transform-origin: left;
  inline-size: 100%;
  block-size: 100%;
}

.button:hover::before {
  transform: scaleX(1);
}

.button__text,
.button-svg {
  color: var(--button-text-color, #00cc14);
  mix-blend-mode: difference;
}

/* В шапке несколько анимаций: двигающаяся стрелка около активного пункта меню, ховер на пункт меню, фокус на пункт меню, изменение состояния между enabled и disabled кнопкой. */

.theme-menu__button {
  padding-inline-start: 25px;
  position: relative;
  border: none;
  font-size: 14px;
  text-transform: uppercase;
  background: transparent;
  transition: opacity 0.3s ease;
  cursor: pointer;
  appearance: none;
}

/* Секция Main */

.content-card {
  margin: 50px auto;
  border: 2px solid var(--accent-color, #00cc14);
  background-color: var(--bg-color, #000);
  max-width: 700px;
}

.card-title {
  font-family: var(--main-font-family, "Inter-Variable", sans-serif);
  font-variation-settings: "wght" var(--accent-font-weight, 785);
  font-size: 18px;
  line-height: normal;
  padding: 6px 12px 6px 10px;
  border-block-end: 2px solid var(--accent-color, #00cc14);
}

/* Поверх каждой карточки должен появиться лейбл.
Для этого вокруг изображения придётся создать обёртку, в этом контейнере будет лежать изображение и текстовый элемент.
Лейбл придётся правильно спозиционировать. А добиться нужного визуального эффекта поможет режим смешивания hard-light. */

.wraper-img {
  display: grid;
  position: relative;
}

.card-picture {
  display: block;
  width: 100%;
  object-fit: cover;
  object-position: center;
  aspect-ratio: 1 / 1;
}

.lable {
  position: absolute;
  place-self: start end;
  margin: 25px;
  z-index: 1;
  color: var(--accent-color, #00cc14);
  font-family: var(--accent-font-family, "PressStart2P-Regular", fantasy);
  font-weight: var(--main-font-weight, 465);
  font-size: 14px;
  text-transform: uppercase;
  text-shadow: 0 0 1px var(--bg-color, #000);

  /* hard-light — если background-image светлее background-color,
  то результатом будет muliply, а если светлее, то результатом будет screen. */

  mix-blend-mode: hard-light;
  opacity: 0.5;
}

.box-content-text {
  display: grid;
  gap: 27px;
  padding: 25px 26px 25px;
  border-block-start: 2px solid var(--accent-color, #00cc14);
}

.content-text {
  font-family: var(--main-font-family, "Inter-Variable", sans-serif);
  font-size: 18px;
  font-weight: var(--main-font-weight, 465);
  line-height: 21px;
}

.double-button {
  min-height: 38px;
  display: flex;
  gap: 5px;
  justify-content: end;
  align-items: center;
}

.card__icon-button {
  display: grid;
  border: 2px solid transparent;
  padding: 0;
  background: transparent;
  transition: border-color 0.3s ease;
  cursor: pointer;
  appearance: none;
}

.card__like-button {
  padding: 0;
  width: 130px;
}

.button__text {
  display: flex;
  height: 100%;
  width: 100%;
  align-items: center;
  justify-content: center;
  padding: 10px 0;
}

.button-flex {
  display: flex;
  align-items: center;
  justify-content: center;
}

.button-save {
  padding: 17px 20px 15px;
  gap: 9px;
  margin: 0px auto 100px;
  border: 2px solid var(--accent-color, #00cc14);
  background-color: var(--bg-color, #000);
  min-width: clamp(306px, 100vw - 30px, 335px);
  outline: none;
}

.button-save-text {
  text-align: center;
  line-height: 12.6px;
}

.button-svg {
  width: 21px;
  height: 21px;
}

.dialog::backdrop {
  background-color: rgb(0 0 0 / 0.75);
  backdrop-filter: blur(7px);
}

.dialog[open] {
  background-color: var(--bg-color, #000);
  outline: solid 2px var(--accent-color, #00cc14);
  padding: 0;
  width: 357px;
  border: none;
}

.close-button {
  margin: 0 auto 30px;
  width: 293px;
  padding: 10.5px 6px;
}

.dialog__save {
  background-color: transparent;
  border: none;
  gap: 20px;
  padding: 30px;
}

.dialog-text {
  width: 234px;
  text-align: left;
  line-height: 21px;
  text-transform: uppercase;
  color: var(--accent-color, #00cc14);
}

.dialog-button-text {
  line-height: 12.6px;
  text-transform: uppercase;
  color: var(--button-text-color, #00cc14);
  mix-blend-mode: difference;
}

.dialog-svg {
  color: var(--accent-color, #00cc14);
  width: 39px;
  height: 39px;
}

.filter-contrast {
  filter: contrast(500%);
}

.filter-saturate {
  filter: saturate(500%);
}

.filter-brightness {
  filter: brightness(500%);
}

.filter-sepia {
  filter: sepia(1);
}

.filter-invert {
  filter: invert(1);
}

.filter-blur {
  filter: blur(5px);
}

.multi-filter {
  filter: hue-rotate(180deg) contrast(80%) sepia(50%);
}

/* Единственный медиазапрос, касающийся ширины устройства, который использовали мы, — @media (width <= 375px).
Его должно хватить. Да и стилей там переопределено совсем немного. Макет практически целиком резиновый. */
@media (width <= 376px) {
  .lable {
    margin: 23px 11px;
  }

  .button-svg {
    width: 28px;
    height: 28px;
  }

  .button-save {
    flex-direction: column;
    flex-wrap: wrap;
    min-width: clamp(306px, 22.72vw + 50px, 335px);
  }

  .dialog {
    width: 341px;
  }

  .dialog-text {
    width: 198px;
  }

  .dialog__save {
    padding: 30px 40px;
  }

  .close-button {
    width: 257px;
  }
}

/* Обратите внимание на обводку у текста. В разных цветовых темах её цвет различается.
В этом спринте вы изучали, как делать такие обводки. Не забудьте проверить поддержку нужного свойства через @supports и сделать фоллбэк в виде text-shadow.
Цвет обводки храните в отдельной переменной и меняйте его значение в различных цветовых схемах сайта. */

@supports (
  (-webkit-text-stroke: 1px var(--shadow-lable, #000)) or
    (text-stroke: 1px var(--shadow-lable, #000))
) {
  .lable {
    text-shadow: none;
    -webkit-text-stroke: 1px var(--shadow-lable, #000);
    text-stroke: 1px var(--shadow-lable, #000);
  }
}
